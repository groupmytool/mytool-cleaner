<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.mytool.group</groupId>
  <artifactId>mytool-cleaner</artifactId>
  <version>1.0-SNAPSHOT</version>
  <name>MyTool Cleaner</name>

  <properties>
    <java.compiler.version>17</java.compiler.version>
    <java.target.version>17</java.target.version>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <javafx.version>21.0.1</javafx.version>

    <logback.version>1.3.0-alpha14</logback.version>
    <junit.version>5.9.2</junit.version>

    <javafx.plugin.version>0.0.8</javafx.plugin.version>
    <gluonfx.plugin.version>1.0.21</gluonfx.plugin.version>

    <runtime.image>runtime-image</runtime.image>
    <main.module>com.mytool.cleaner</main.module>
    <main.class>com.mytool.cleaner.CleanerApp</main.class>
    <app.launcher>app</app.launcher>
    <app.name>MyTool Cleaner</app.name>
    <app.vendor>com.mytool.cleaner</app.vendor>

  </properties>

  <dependencies>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-controls</artifactId>
      <version>${javafx.version}</version>
    </dependency>
    <!-- icons: BSD license, https://github.com/haraldk/TwelveMonkeys -->
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-icns</artifactId>
      <version>3.9.4</version>
    </dependency>
    <!-- plist: open source library without restriction, https://github.com/3breadt/dd-plist -->
    <dependency>
      <groupId>com.googlecode.plist</groupId>
      <artifactId>dd-plist</artifactId>
      <version>1.27</version>
    </dependency>
    <!-- gson: Apache-2.0 license, https://github.com/google/gson -->
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.10.1</version>
    </dependency>
    <!-- java-semver: MIT license, https://github.com/zafarkhaja/jsemver -->
    <dependency>
      <groupId>com.github.zafarkhaja</groupId>
      <artifactId>java-semver</artifactId>
      <version>0.10.2</version>
    </dependency>

    <!-- 日志-->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.version}</version>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.11.0</version>
        <configuration>
          <source>${java.compiler.version}</source>
          <target>${java.target.version}</target>
          <release>${java.target.version}</release>
        </configuration>
      </plugin>

      <!-- 手动打包配置开始 -->
      <!-- 主程序Jar入口 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.3.0</version>
        <configuration>
          <outputDirectory>${project.build.directory}/libs/launch</outputDirectory>
          <finalName>${project.name}</finalName>
          <archive>
            <manifest>
              <mainClass>${main.class}</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      <!-- 依赖Jar仓库 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.6.1</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/libs/javafx</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>true</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
              <includeScope>compile</includeScope>
              <includeScope>runtime</includeScope>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- 手动打包配置结束 -->

      <!-- 使用了自动模块jar包，不能直接使用此插件打包，需要特殊处理jar包依赖后使用 -->
      <plugin>
        <groupId>org.openjfx</groupId>
        <artifactId>javafx-maven-plugin</artifactId>
        <version>${javafx.plugin.version}</version>
        <executions>
          <execution>
            <!-- Default configuration for running with: mvn clean javafx:run -->
            <id>default-cli</id>
            <configuration>
              <mainClass>${main.module}/${main.class}</mainClass>
              <launcher>${app.launcher}</launcher>
              <jlinkImageName>${runtime.image}</jlinkImageName>
              <noManPages>true</noManPages>
              <stripDebug>true</stripDebug>
              <noHeaderFiles>true</noHeaderFiles>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- 打包native镜像 -->
      <plugin>
        <groupId>com.gluonhq</groupId>
        <artifactId>gluonfx-maven-plugin</artifactId>
        <version>${gluonfx.plugin.version}</version>
        <configuration>
          <target>host</target>
          <mainClass>${main.module}/${main.class}</mainClass>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <version>3.1.1</version>
        <configuration>
          <!-- javafx 项目不需要install到maven仓库，所以跳过install -->
          <skip>true</skip>
        </configuration>
      </plugin>

    </plugins>
  </build>
</project>